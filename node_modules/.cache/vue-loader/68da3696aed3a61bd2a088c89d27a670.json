{"remainingRequest":"/Users/hyeon-work/workspace/w-i/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/hyeon-work/workspace/w-i/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hyeon-work/workspace/w-i/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hyeon-work/workspace/w-i/src/views/Call.vue?vue&type=template&id=d58462d0&scoped=true&","dependencies":[{"path":"/Users/hyeon-work/workspace/w-i/src/views/Call.vue","mtime":1597461066436},{"path":"/Users/hyeon-work/workspace/w-i/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyeon-work/workspace/w-i/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/hyeon-work/workspace/w-i/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyeon-work/workspace/w-i/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}